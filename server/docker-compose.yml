services:
#  api:
#    build:
#      dockerfile: Dockerfile
#      context: .
#      # Only will build development stage from our dockerfile
#      target: development
#    volumes:
#      - .:/usr/src/app
#      - ./usr/src/app/node_modules
#    env_file:
#      - .env
#    # Run a command against the development stage of the image
#    command: npm run start:dev
#    ports:
#      - 3000:3000
#    depends_on:
#      - postgres
  postgres:
    container_name: pg_db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - ./db/postgres-data:/var/lib/postgresql/data
      - ./db/docker-entrypoint-initdb.d/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"

volumes:
  docker-nest-postgres:
